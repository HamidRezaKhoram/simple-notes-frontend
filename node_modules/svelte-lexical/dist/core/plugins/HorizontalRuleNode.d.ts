import type { DOMConversionMap, DOMExportOutput, LexicalCommand, SerializedLexicalNode, LexicalNode, EditorConfig } from 'lexical';
import pkg, { type LexicalEditor } from 'lexical';
declare const DecoratorNode: typeof pkg.DecoratorNode;
export declare const INSERT_HORIZONTAL_RULE_COMMAND: LexicalCommand<void>;
export declare class HorizontalRuleNode extends DecoratorNode<unknown> {
    static getType(): string;
    static clone(node: HorizontalRuleNode): HorizontalRuleNode;
    static importJSON(): HorizontalRuleNode;
    static importDOM(): DOMConversionMap | null;
    exportJSON(): SerializedLexicalNode;
    exportDOM(): DOMExportOutput;
    createDOM(editorConfig: EditorConfig, editor: LexicalEditor): HTMLElement;
    getTextContent(): '\n';
    isInline(): false;
    updateDOM(): false;
    decorate(): null;
}
export declare function $createHorizontalRuleNode(): HorizontalRuleNode;
export declare function $isHorizontalRuleNode(node: LexicalNode | null | undefined): node is HorizontalRuleNode;
export {};
