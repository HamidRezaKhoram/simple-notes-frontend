{"version":3,"file":"index.es.js","sources":["../src/code.ts","../src/error.ts","../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\nexport const enum ErrorCode {\n  docTypeError = 'docTypeError',\n  contextNotFound = 'contextNotFound',\n  timerNotFound = 'timerNotFound',\n  ctxCallOutOfScope = 'ctxCallOutOfScope',\n  createNodeInParserFail = 'createNodeInParserFail',\n  stackOverFlow = 'stackOverFlow',\n  parserMatchError = 'parserMatchError',\n  serializerMatchError = 'serializerMatchError',\n  getAtomFromSchemaFail = 'getAtomFromSchemaFail',\n  expectDomTypeError = 'expectDomTypeError',\n  callCommandBeforeEditorView = 'callCommandBeforeEditorView',\n  themeMustInstalled = 'themeMustInstalled',\n  missingRootElement = 'missingRootElement',\n  missingNodeInSchema = 'missingNodeInSchema',\n  missingMarkInSchema = 'missingMarkInSchema',\n\n  // theme\n  missingIcon = 'missingIcon',\n\n  // vue\n  vueRendererCallOutOfScope = 'vueRendererCallOutOfScope',\n\n  // collab plugin\n  ctxNotBind = 'ctxNotBind',\n  missingYjsDoc = 'missingYjsDoc',\n\n  // menu plugin\n  repeatCallsToMenuWrapperInit = 'repeatCallsToMenuWrapperInit',\n  missingMenuWrapper = 'missingMenuWrapper',\n}\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport type { ErrorCode } from './code'\n\nexport class MilkdownError extends Error {\n  public code: string\n  constructor(code: ErrorCode, message: string) {\n    super(message)\n    this.name = 'MilkdownError'\n    this.code = code\n  }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ErrorCode } from './code'\nimport { MilkdownError } from './error'\n\nconst functionReplacer = (_: string, value: unknown) => (typeof value === 'function' ? '[Function]' : value)\n\nconst stringify = (x: unknown): string => JSON.stringify(x, functionReplacer)\n\nexport const docTypeError = (type: unknown) =>\n  new MilkdownError(ErrorCode.docTypeError, `Doc type error, unsupported type: ${stringify(type)}`)\n\nexport const contextNotFound = (name: string) =>\n  new MilkdownError(ErrorCode.contextNotFound, `Context \"${name}\" not found, do you forget to inject it?`)\n\nexport const timerNotFound = (name: string) =>\n  new MilkdownError(ErrorCode.timerNotFound, `Timer \"${name}\" not found, do you forget to record it?`)\n\nexport const ctxCallOutOfScope = () =>\n  new MilkdownError(ErrorCode.ctxCallOutOfScope, 'Should not call a context out of the plugin.')\n\nexport const createNodeInParserFail = (...args: unknown[]) => {\n  const message = args.reduce((msg, arg) => {\n    if (!arg)\n      return msg\n\n    const serialize = (x: unknown): string => {\n      if (Array.isArray(x))\n        return (x as unknown[]).map(y => serialize(y)).join(', ')\n\n      if ((x as { toJSON(): Record<string, unknown> }).toJSON)\n        return stringify((x as { toJSON(): Record<string, unknown> }).toJSON())\n\n      if ((x as { spec: string }).spec)\n        return stringify((x as { spec: string }).spec)\n\n      return (x as { toString(): string }).toString()\n    }\n    return `${msg}, ${serialize(arg)}`\n  }, 'Create prosemirror node from remark failed in parser') as string\n\n  return new MilkdownError(ErrorCode.createNodeInParserFail, message)\n}\n\nexport const stackOverFlow = () =>\n  new MilkdownError(ErrorCode.stackOverFlow, 'Stack over flow, cannot pop on an empty stack.')\n\nexport const parserMatchError = (node: unknown) =>\n  new MilkdownError(ErrorCode.parserMatchError, `Cannot match target parser for node: ${stringify(node)}.`)\n\nexport const serializerMatchError = (node: unknown) =>\n  new MilkdownError(ErrorCode.serializerMatchError, `Cannot match target serializer for node: ${stringify(node)}.`)\n\nexport const getAtomFromSchemaFail = (type: 'mark' | 'node', name: string) =>\n  new MilkdownError(ErrorCode.getAtomFromSchemaFail, `Cannot get ${type}: ${name} from schema.`)\n\nexport const expectDomTypeError = (node: unknown) =>\n  new MilkdownError(ErrorCode.expectDomTypeError, `Expect to be a dom, but get: ${stringify(node)}.`)\n\nexport const callCommandBeforeEditorView = () =>\n  new MilkdownError(\n    ErrorCode.callCommandBeforeEditorView,\n    'You\\'re trying to call a command before editor view initialized, make sure to get commandManager from ctx after editor view has been initialized',\n  )\n\nexport const themeMustInstalled = () =>\n  new MilkdownError(\n    ErrorCode.themeMustInstalled,\n        `It seems that no theme found in editor, please make sure you have use theme in front of all plugins.\nIf you prefer to use an empty theme, you can use \\`themeFactory({})\\`.`,\n  )\n\nexport const missingRootElement = () =>\n  new MilkdownError(\n    ErrorCode.missingRootElement,\n    'Missing root element, milkdown cannot find root element of the editor.',\n  )\n\nexport const missingNodeInSchema = (name: string) =>\n  new MilkdownError(\n    ErrorCode.missingNodeInSchema,\n        `Missing node in schema, milkdown cannot find \"${name}\" in schema.`,\n  )\n\nexport const missingMarkInSchema = (name: string) =>\n  new MilkdownError(\n    ErrorCode.missingMarkInSchema,\n        `Missing mark in schema, milkdown cannot find \"${name}\" in schema.`,\n  )\n\nexport const missingIcon = (name: string) =>\n  new MilkdownError(ErrorCode.missingIcon, `Missing icon in theme, milkdown cannot find icon \"${name}\" in theme.`)\n\nexport const ctxNotBind = () =>\n  new MilkdownError(ErrorCode.ctxNotBind, 'Context not bind, please make sure the plugin has been initialized.')\n\nexport const missingYjsDoc = () =>\n  new MilkdownError(ErrorCode.missingYjsDoc, 'Missing yjs doc, please make sure you have bind one.')\n\nexport const vueRendererCallOutOfScope = () =>\n  new MilkdownError(ErrorCode.vueRendererCallOutOfScope, 'Should not call vue renderer before it has been created.')\n\nexport const missingMenuWrapper = () =>\n  new MilkdownError(ErrorCode.missingMenuWrapper, 'Missing menu wrapper, should init menu wrapper first.')\n\nexport const repeatCallsToMenuWrapperInit = () =>\n  new MilkdownError(ErrorCode.repeatCallsToMenuWrapperInit, 'Repeated calls to menu wrapper initialization')\n"],"names":["ErrorCode","MilkdownError","code","message","__publicField","functionReplacer","_","value","stringify","x","docTypeError","type","contextNotFound","name","timerNotFound","ctxCallOutOfScope","createNodeInParserFail","args","msg","arg","serialize","y","stackOverFlow","parserMatchError","node","serializerMatchError","getAtomFromSchemaFail","expectDomTypeError","callCommandBeforeEditorView","themeMustInstalled","missingRootElement","missingNodeInSchema","missingMarkInSchema","missingIcon","ctxNotBind","missingYjsDoc","vueRendererCallOutOfScope","missingMenuWrapper","repeatCallsToMenuWrapperInit"],"mappings":"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"}