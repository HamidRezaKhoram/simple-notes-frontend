{"version":3,"file":"index.es.js","sources":["../../../node_modules/.pnpm/@emotion+hash@0.8.0/node_modules/@emotion/hash/dist/hash.browser.esm.js","../../../node_modules/.pnpm/@emotion+unitless@0.7.5/node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../../../node_modules/.pnpm/@emotion+memoize@0.7.5/node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js","../../../node_modules/.pnpm/@emotion+serialize@1.0.4/node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","../../../node_modules/.pnpm/@emotion+utils@1.1.0/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","../../../node_modules/.pnpm/@emotion+css@11.9.0/node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js","../src/emotion.ts","../src/manager.ts","../src/keys/border.ts","../src/keys/color.ts","../src/keys/font.ts","../src/keys/global.ts","../src/keys/icon.ts","../src/keys/renderer/code-fence.ts","../src/keys/renderer/image.ts","../src/keys/renderer/inner-editor.ts","../src/keys/renderer/input-chip.ts","../src/keys/renderer/task-list-item.ts","../src/keys/scrollbar.ts","../src/keys/shadow.ts","../src/keys/size.ts","../src/keys/index.ts","../src/utils.ts"],"sourcesContent":["/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(var|attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error(noComponentSelectorMessage);\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport default createEmotion;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Emotion, Options } from '@emotion/css/create-instance'\nimport createEmotion from '@emotion/css/create-instance'\nimport { createSlice } from '@milkdown/ctx'\n\nexport type { Emotion, Options } from '@emotion/css/create-instance'\n\nexport const initEmotion = (options?: Options): Emotion => createEmotion(options)\n\nexport const emotionConfigCtx = createSlice<Options, 'EmotionConfig'>({ key: 'milkdown' }, 'EmotionConfig')\nexport const emotionCtx = createSlice<Emotion, 'Emotion'>({} as Emotion, 'Emotion')\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport type { Ctx, MilkdownPlugin, Pre, Slice } from '@milkdown/ctx'\nimport { createContainer, createSlice } from '@milkdown/ctx'\n\nimport { emotionCtx } from './emotion'\n\nexport type ThemeSlice<Ret = unknown, T = undefined> = (payload: T) => Ret | undefined\nexport type ThemeSliceKey<Ret = unknown, T = undefined, K extends string = string> = Slice<ThemeSlice<Ret, T>, K>\n\nexport const createThemeSliceKey = <Ret, T = undefined, K extends string = string>(key: K): ThemeSliceKey<Ret, T, K> =>\n  createSlice((() => null as unknown as Ret) as ThemeSlice<Ret, T>, key)\n\ntype GetRet<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<infer Ret, any, any> ? Ret : unknown\n\ntype GetPayload<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<any, infer T, any> ? T : undefined\n\ntype GetKey<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<any, any, infer T> ? T : undefined\n\nexport class ThemeManager {\n  #container = createContainer()\n  #cache: Map<string, ThemeSlice> = new Map()\n  #flushListener: Set<() => void> = new Set()\n  #executor: () => void = () => {\n    /* noop */\n  }\n\n  inject<Ret = unknown, T = undefined>(key: ThemeSliceKey<Ret, T>): void {\n    key(this.#container.sliceMap)\n  }\n\n  has(key: ThemeSliceKey | string): boolean {\n    const name = typeof key === 'string' ? key : key.sliceName\n    if (this.#cache.has(name))\n      return true\n\n    const meta = this.#container.getSlice(key)\n\n    return meta.get()(null as never) != null\n  }\n\n  set<\n\n        Key extends ThemeSliceKey<any, any, any>,\n        Ret extends GetRet<Key> = GetRet<Key>,\n        Payload extends GetPayload<Key> = GetPayload<Key>,\n        K extends GetKey<Key> = GetKey<Key>,\n    >(key: Key | (K & string), themeSlice: ThemeSlice<Ret, Payload>): void\n  set<Ret = unknown, T = undefined>(key: ThemeSliceKey<Ret, T> | string, themeSlice: ThemeSlice<Ret, T>): void\n  set(key: ThemeSliceKey | string, themeSlice: ThemeSlice): void {\n    const name = typeof key === 'string' ? key : key.sliceName\n    this.#cache.set(name, themeSlice as ThemeSlice)\n  }\n\n  get<\n\n        Key extends ThemeSliceKey<any, any, any>,\n        Ret extends GetRet<Key> = GetRet<Key>,\n        Payload extends GetPayload<Key> = GetPayload<Key>,\n        K extends GetKey<Key> = GetKey<Key>,\n    >(key: Key | (K & string), payload: Payload): Ret {\n    const name = typeof key === 'string' ? key : (key as Key).sliceName\n    const lazyGet = this.#cache.get(name)\n    if (lazyGet) {\n      const meta = this.#container.getSlice(key)\n      meta.set(lazyGet)\n      this.#cache.delete(key as string)\n    }\n    const meta = this.#container.getSlice(key)\n\n    return meta.get()(payload) as Ret\n  }\n\n  getSlice<\n\n        Key extends ThemeSliceKey<any, any, any>,\n        Ret extends GetRet<Key> = GetRet<Key>,\n        Payload extends GetPayload<Key> = GetPayload<Key>,\n        K extends GetKey<Key> = GetKey<Key>,\n    >(key: Key | (K & string)): ThemeSlice<Ret, Payload> {\n    const name: string = typeof key === 'string' ? key : (key as Key).sliceName\n    const lazyGet = this.#cache.get(name)\n    if (lazyGet) {\n      const meta = this.#container.getSlice(key)\n      meta.set(lazyGet)\n      this.#cache.delete(key as string)\n    }\n    const meta = this.#container.getSlice(key)\n\n    return meta.get()\n  }\n\n  onFlush(fn: () => void, callWhenRegister = true): void {\n    if (!this.#flushListener.has(fn))\n      this.#flushListener.add(fn)\n\n    if (callWhenRegister)\n      fn()\n  }\n\n  async switch(ctx: Ctx, theme: MilkdownPlugin) {\n    const emotion = ctx.get(emotionCtx)\n    emotion.flush()\n    await theme(ctx as unknown as Pre)(ctx)\n    this.runExecutor()\n    this.#flushListener.forEach(f => f())\n  }\n\n  flush(ctx: Ctx) {\n    const emotion = ctx.get(emotionCtx)\n    emotion.flush()\n    this.runExecutor()\n    this.#flushListener.forEach(f => f())\n  }\n\n  setExecutor(executor: () => void): void {\n    executor()\n    this.#executor = executor\n  }\n\n  runExecutor(): void {\n    this.#executor()\n  }\n}\n\nexport const themeManagerCtx = createSlice(new ThemeManager(), 'themeManager')\n\nexport const createThemeManager = () => new ThemeManager()\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager'\n\nexport const ThemeBorder = createThemeSliceKey<string, 'left' | 'right' | 'top' | 'bottom' | undefined, 'border'>(\n  'border',\n)\nexport type ThemeBorderType = typeof ThemeBorder\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager'\nimport type { Color } from '../types'\n\nexport const ThemeColor = createThemeSliceKey<string, [key: Color, opacity?: number]>('color')\nexport type ThemeColorType = typeof ThemeColor\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager'\nimport type { Font } from '../types'\n\nexport const ThemeFont = createThemeSliceKey<string, Font, 'font'>('font')\nexport type ThemeFontType = typeof ThemeFont\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager'\n\nexport const ThemeGlobal = createThemeSliceKey<void, undefined, 'global'>('global')\nexport type ThemeGlobalType = typeof ThemeGlobal\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager'\nimport type { Icon, IconValue } from '../types'\n\nexport const ThemeIcon = createThemeSliceKey<IconValue, Icon, 'icon'>('icon')\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\n\nimport { createThemeSliceKey } from '../../manager'\n\ninterface ThemeOptions {\n  view: EditorView\n  onSelectLanguage: (language: string) => void\n  editable: () => boolean\n  onFocus: () => void\n  onBlur: () => void\n  languageList: string[]\n}\ninterface ThemeRenderer {\n  dom: HTMLElement\n  contentDOM: HTMLElement\n  onUpdate: (node: Node) => void\n  onDestroy: () => void\n}\nexport const ThemeCodeFence = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'code-fence'>('code-fence')\nexport type ThemeCodeFenceType = typeof ThemeCodeFence\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model'\n\nimport { createThemeSliceKey } from '../../manager'\n\ninterface ThemeOptions {\n  isBlock: boolean\n  placeholder: string\n  onError?: (img: HTMLImageElement) => void\n  onLoad?: (img: HTMLImageElement) => void\n}\ninterface ThemeRenderer {\n  dom: HTMLElement\n  onUpdate: (node: Node) => void\n}\n\nexport const ThemeImage = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'image'>('image')\nexport type ThemeImageType = typeof ThemeImage\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\n\nimport { createThemeSliceKey } from '../../manager'\n\ninterface InnerEditorRenderer {\n  dom: HTMLElement\n  preview: HTMLElement\n  editor: HTMLElement\n  onUpdate: (node: Node, isInit: boolean) => void\n  onFocus: (node: Node) => void\n  onBlur: (node: Node) => void\n  onDestroy: () => void\n  stopEvent: (event: Event) => boolean\n}\ninterface InnerEditorOptions {\n  view: EditorView\n  getPos: () => number\n  render: (content: string) => void\n}\nexport const ThemeInnerEditor = createThemeSliceKey<InnerEditorRenderer, InnerEditorOptions, 'inner-editor'>(\n  'inner-editor',\n)\nexport type ThemeInnerEditorType = typeof ThemeInnerEditor\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorView } from '@milkdown/prose/view'\n\nimport { createThemeSliceKey } from '../../manager'\n\ninterface InputChipRenderer {\n  dom: HTMLElement\n  update: (value: string) => void\n  init: (editorView: EditorView) => void\n  show: (editorView: EditorView) => void\n  hide: () => void\n  destroy: () => void\n}\n\ninterface InputChipOptions {\n  width?: string\n  isBindMode?: boolean\n  buttonText?: string\n  placeholder?: string\n  calculatePosition?: (editorView: EditorView, dom: HTMLElement) => void\n  onUpdate: (value: string) => void\n}\n\nexport const ThemeInputChip = createThemeSliceKey<InputChipRenderer, InputChipOptions, 'input-chip'>('input-chip')\nexport type ThemeInputChipType = typeof ThemeInputChip\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model'\n\nimport { createThemeSliceKey } from '../../manager'\n\ninterface ThemeRenderer {\n  dom: HTMLElement\n  contentDOM: HTMLElement\n  onUpdate: (node: Node) => void\n}\ninterface ThemeOptions {\n  editable: () => boolean\n  onChange: (selected: boolean) => void\n}\nexport const ThemeTaskListItem = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'task-list-item'>('task-list-item')\nexport type ThemeTaskListItemType = typeof ThemeTaskListItem\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager'\n\nexport const ThemeScrollbar = createThemeSliceKey<\n    string,\n    [direction?: 'x' | 'y', type?: 'normal' | 'thin'] | undefined,\n    'scrollbar'\n>('scrollbar')\nexport type ThemeScrollbarType = typeof ThemeScrollbar\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager'\n\nexport const ThemeShadow = createThemeSliceKey<string, undefined, 'shadow'>('shadow')\nexport type ThemeShadowType = typeof ThemeShadow\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager'\nimport type { Size } from '../types'\n\nexport const ThemeSize = createThemeSliceKey<string, Size, 'size'>('size')\nexport type ThemeSizeType = typeof ThemeSize\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { ThemeSliceKey } from '../manager'\nimport { ThemeBorder } from './border'\nimport { ThemeColor } from './color'\nimport { ThemeFont } from './font'\nimport { ThemeGlobal } from './global'\nimport { ThemeIcon } from './icon'\nimport { ThemeCodeFence, ThemeImage, ThemeInnerEditor, ThemeInputChip, ThemeTaskListItem } from './renderer'\nimport { ThemeScrollbar } from './scrollbar'\nimport { ThemeShadow } from './shadow'\nimport { ThemeSize } from './size'\n\nexport const internalThemeKeys = [\n  /** Props */\n  ThemeColor,\n  ThemeSize,\n  ThemeFont,\n  ThemeScrollbar,\n  ThemeShadow,\n  ThemeBorder,\n  ThemeIcon,\n  ThemeGlobal,\n\n  /** Renderer */\n  ThemeCodeFence,\n  ThemeImage,\n  ThemeInnerEditor,\n  ThemeTaskListItem,\n  ThemeInputChip,\n] as readonly ThemeSliceKey[]\n\nexport * from './border'\nexport * from './color'\nexport * from './font'\nexport * from './global'\nexport * from './icon'\nexport * from './renderer'\nexport * from './scrollbar'\nexport * from './shadow'\nexport * from './size'\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ThemeColor } from './keys'\nimport type { ThemeManager } from './manager'\nimport type { Color } from './types'\n\ntype RGB = [number, number, number]\nexport const hex2rgb = (hex: string): RGB | null => {\n  const rgbShorthandRegex = /^([a-f\\d])([a-f\\d])([a-f\\d])$/i\n  const rgbRegex = /^([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\n  const parse16 = (x: string) => parseInt(x, 16)\n\n  const fullHex = hex.slice(1).replace(rgbShorthandRegex, (_, r, g, b) => {\n    return r + r + g + g + b + b\n  })\n\n  const [ok, r = '0', g = '0', b = '0'] = fullHex.match(rgbRegex) || []\n\n  return ok ? ([r, g, b].map(parse16) as RGB) : null\n}\n\nexport const getPalette\n    = (manager: ThemeManager) =>\n      (color: Color, opacity = 1) =>\n        manager.get(ThemeColor, [color, opacity])\n"],"names":["murmur2","str","h","k","i","len","unitlessKeys","memoize","fn","cache","arg","ILLEGAL_ESCAPE_SEQUENCE_ERROR","UNDEFINED_AS_OBJECT_KEY_ERROR","hyphenateRegex","animationRegex","isCustomProperty","property","isProcessableValue","value","processStyleName","styleName","processStyleValue","key","match","p1","p2","cursor","unitless","contentValuePattern","contentValues","oldProcessStyleValue","msPattern","hyphenPattern","hyphenatedCache","processed","_char","noComponentSelectorMessage","handleInterpolation","mergedProps","registered","interpolation","next","styles","createStringFromObject","previousCursor","result","matched","replaced","fakeVarName","cached","obj","string","_key","_i","interpolated","labelPattern","sourceMapPattern","serializeStyles","args","stringMode","strings","sourceMap","identifierName","name","hashString","isBrowser","getRegisteredStyles","registeredStyles","classNames","rawClassName","className","registerStyles","serialized","isStringTag","insertStyles","current","insertWithoutScoping","merge","css","createEmotion","options","createCache","_len","keyframes","_len2","_key2","animation","injectGlobal","_len3","_key3","cx","_len4","_key4","classnames","ids","cls","toAdd","createEmotion$1","initEmotion","emotionConfigCtx","createSlice","emotionCtx","createThemeSliceKey","ThemeManager","__privateAdd","_container","createContainer","_cache","_flushListener","_executor","__privateGet","themeSlice","payload","lazyGet","callWhenRegister","ctx","theme","f","executor","__privateSet","themeManagerCtx","createThemeManager","ThemeBorder","ThemeColor","ThemeFont","ThemeGlobal","ThemeIcon","ThemeCodeFence","ThemeImage","ThemeInnerEditor","ThemeInputChip","ThemeTaskListItem","ThemeScrollbar","ThemeShadow","ThemeSize","internalThemeKeys","hex2rgb","hex","rgbShorthandRegex","rgbRegex","parse16","x","fullHex","_","r","g","b","ok","getPalette","manager","color","opacity"],"mappings":"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"}