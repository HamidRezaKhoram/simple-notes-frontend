{"version":3,"file":"index.js","sources":["../src/toolkit/browser.ts","../src/toolkit/input-rules/custom-input-rules.ts","../src/toolkit/input-rules/mark-rule.ts","../src/toolkit/position/index.ts","../src/toolkit/prose/helper.ts","../src/toolkit/prose/node.ts","../src/toolkit/prose/schema.ts","../src/toolkit/prose/selection.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\n\n/**\n * Copy paste from:\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/browser.ts\n */\n\nconst nav = typeof navigator != 'undefined' ? navigator : null\nconst doc = typeof document != 'undefined' ? document : null\nconst agent = (nav && nav.userAgent) || ''\n\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent)\nconst ie_upto10 = /MSIE \\d/.exec(agent)\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent)\n\nexport const ie = !!(ie_upto10 || ie_11up || ie_edge)\nexport const ie_version = ie_upto10\n  ? (document as typeof document & { documentMode: unknown }).documentMode\n  : ie_11up\n    ? +ie_11up![1]!\n    : ie_edge\n      ? +ie_edge![1]!\n      : 0\nexport const gecko = !ie && /gecko\\/(\\d+)/i.test(agent)\nexport const gecko_version = gecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])![1]!\n\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent)\nexport const chrome = !!_chrome\nexport const chrome_version = _chrome ? +_chrome[1]! : 0\nexport const safari = !ie && !!nav && /Apple Computer/.test(nav.vendor)\n// Is true for both iOS and iPadOS for convenience\nexport const ios = safari && (/Mobile\\/\\w+/.test(agent) || (!!nav && nav.maxTouchPoints > 2))\nexport const mac = ios || (nav ? /Mac/.test(nav.platform) : false)\nexport const android = /Android \\d/.test(agent)\nexport const webkit = !!doc && 'webkitFontSmoothing' in doc.documentElement.style\nexport const webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])![1]! : 0\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport type { InputRule } from '../../inputrules'\nimport type { EditorState, TextSelection, Transaction } from '../../state'\nimport { Plugin, PluginKey } from '../../state'\nimport type { EditorView } from '../../view'\n\nfunction run(view: EditorView, from: number, to: number, text: string, rules: InputRule[], plugin: Plugin) {\n  if (view.composing)\n    return false\n  const state = view.state\n  const $from = state.doc.resolve(from)\n  if ($from.parent.type.spec.code)\n    return false\n  const textBefore\n        = $from.parent.textBetween(Math.max(0, $from.parentOffset - 500), $from.parentOffset, undefined, '\\uFFFC') + text\n  for (let i = 0; i < rules.length; i++) {\n    const match = (rules[i] as { match: RegExp }).match.exec(textBefore)\n    const tr\n            = match\n            && match[0]\n            && (\n              rules[i] as { handler: (state: EditorState, match: string[], from: number, to: number) => Transaction }\n            ).handler(state, match, from - (match[0].length - text.length), to)\n    if (!tr)\n      continue\n    view.dispatch(tr.setMeta(plugin, { transform: tr, from, to, text }))\n    return true\n  }\n  return false\n}\n\nexport const customInputRulesKey = new PluginKey('MILKDOWN_CUSTOM_INPUTRULES')\nexport const customInputRules = ({ rules }: { rules: InputRule[] }): Plugin => {\n  const plugin: Plugin = new Plugin({\n    key: customInputRulesKey,\n    isInputRules: true,\n\n    state: {\n      init() {\n        return null\n      },\n      apply(this: typeof plugin, tr, prev) {\n        const stored = tr.getMeta(this)\n        if (stored)\n          return stored\n        return tr.selectionSet || tr.docChanged ? null : prev\n      },\n    },\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin)\n      },\n      handleDOMEvents: {\n        compositionend: (view) => {\n          setTimeout(() => {\n            const { $cursor } = view.state.selection as TextSelection\n            if ($cursor)\n              run(view, $cursor.pos, $cursor.pos, '', rules, plugin)\n          })\n          return false\n        },\n      },\n      handleKeyDown(view, event) {\n        if (event.key !== 'Enter')\n          return false\n        const { $cursor } = view.state.selection as TextSelection\n        if ($cursor)\n          return run(view, $cursor.pos, $cursor.pos, '\\n', rules, plugin)\n        return false\n      },\n    },\n  })\n  return plugin\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { InputRule } from '../../inputrules'\nimport type { Mark, MarkType } from '../../model'\nimport type { EditorState } from '../../state'\n\nexport function markRule(regexp: RegExp, markType: MarkType): InputRule {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const { tr } = state\n    const matchLength = match.length\n\n    let markStart = start\n    let markEnd = end\n\n    if (match[matchLength - 1]) {\n      const first = match[0] as string\n      const last = match[matchLength - 1] as string\n      const last1 = match[matchLength - 2] as string\n\n      const matchStart = start + first.indexOf(last1)\n      const matchEnd = matchStart + last1.length - 1\n      const textStart = matchStart + last1.lastIndexOf(last)\n      const textEnd = textStart + last.length\n\n      const excludedMarks = getMarksBetween(start, end, state)\n        .filter(item => item.mark.type.excludes(markType))\n        .filter(item => item.end > matchStart)\n\n      if (excludedMarks.length)\n        return null\n\n      if (textEnd < matchEnd)\n        tr.delete(textEnd, matchEnd)\n\n      if (textStart > matchStart)\n        tr.delete(matchStart, textStart)\n\n      markStart = matchStart\n      markEnd = markStart + last.length\n    }\n    tr.addMark(markStart, markEnd, markType.create())\n    tr.removeStoredMark(markType)\n    return tr\n  })\n}\n\nfunction getMarksBetween(start: number, end: number, state: EditorState) {\n  let marks: { start: number; end: number; mark: Mark }[] = []\n\n  state.doc.nodesBetween(start, end, (node, pos) => {\n    marks = [\n      ...marks,\n      ...node.marks.map(mark => ({\n        start: pos,\n        end: pos + node.nodeSize,\n        mark,\n      })),\n    ]\n  })\n\n  return marks\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { expectDomTypeError, missingRootElement } from '@milkdown/exception'\n\nimport type { EditorView } from '../../view'\n\ntype Point = [top: number, left: number]\n\nexport const calculateNodePosition = (\n  view: EditorView,\n  target: HTMLElement,\n  handler: (selectedRect: DOMRect, targetRect: DOMRect, parentRect: DOMRect) => Point,\n) => {\n  const state = view.state\n  const { from } = state.selection\n\n  const { node } = view.domAtPos(from)\n  const element = node instanceof Text ? node.parentElement : node\n  if (!(element instanceof HTMLElement))\n    throw expectDomTypeError(element)\n\n  const selectedNodeRect = element.getBoundingClientRect()\n  const targetNodeRect = target.getBoundingClientRect()\n  const parent = target.parentElement\n  if (!parent)\n    throw expectDomTypeError(parent)\n\n  const parentNodeRect = parent.getBoundingClientRect()\n\n  const [top, left] = handler(selectedNodeRect, targetNodeRect, parentNodeRect)\n\n  target.style.top = `${top}px`\n  target.style.left = `${left}px`\n}\n\ninterface Rect {\n  left: number\n  right: number\n  top: number\n  bottom: number\n}\n\nexport const calculateTextPosition = (\n  view: EditorView,\n  target: HTMLElement,\n  handler: (start: Rect, end: Rect, targetRect: DOMRect, parentRect: DOMRect) => Point,\n) => {\n  const state = view.state\n  const { from, to } = state.selection\n  const start = view.coordsAtPos(from)\n  const end = view.coordsAtPos(to)\n\n  const targetNodeRect = target.getBoundingClientRect()\n  const parent = target.parentElement\n  if (!parent)\n    throw missingRootElement()\n\n  const parentNodeRect = parent.getBoundingClientRect()\n\n  const [top, left] = handler(start, end, targetNodeRect, parentNodeRect)\n\n  target.style.top = `${top}px`\n  target.style.left = `${left}px`\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { NodeType, Node as ProseNode } from '../../model'\nimport type { Transaction } from '../../state'\n\nexport const cloneTr = (tr: Transaction): Transaction => {\n  return Object.assign(Object.create(tr), tr).setTime(Date.now())\n}\n\nexport const equalNodeType = (nodeType: NodeType | NodeType[], node: ProseNode) => {\n  return (Array.isArray(nodeType) && nodeType.includes(node.type)) || node.type === nodeType\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { MarkType, Node as ProseNode } from '../../model'\nimport type { Predicate } from './types'\n\nexport interface NodeWithPos { pos: number; node: ProseNode }\n\nexport const flatten = (node: ProseNode, descend = true): NodeWithPos[] => {\n  const result: NodeWithPos[] = []\n  node.descendants((child, pos) => {\n    result.push({ node: child, pos })\n    if (!descend)\n      return false\n\n    return undefined\n  })\n  return result\n}\n\nexport const findChildren\n    = (predicate: Predicate) =>\n      (node: ProseNode, descend?: boolean): NodeWithPos[] =>\n        flatten(node, descend).filter(child => predicate(child.node))\n\nexport const findChildrenByMark = (node: ProseNode, markType: MarkType, descend?: boolean): NodeWithPos[] =>\n  findChildren(child => Boolean(markType.isInSet(child.marks)))(node, descend)\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { getAtomFromSchemaFail } from '@milkdown/exception'\n\nimport type { MarkType, NodeType, Schema } from '../../model'\n\nexport const getNodeFromSchema = (type: string, schema: Schema): NodeType => {\n  const target = schema.nodes[type]\n\n  if (!target)\n    throw getAtomFromSchemaFail('node', type)\n\n  return target\n}\n\nexport const getMarkFromSchema = (type: string, schema: Schema): MarkType => {\n  const target = schema.marks[type]\n\n  if (!target)\n    throw getAtomFromSchemaFail('mark', type)\n\n  return target\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { NodeType, Node as ProseNode, ResolvedPos } from '../../model'\nimport type { Selection } from '../../state'\nimport { NodeSelection } from '../../state'\nimport { equalNodeType } from './helper'\nimport type { Predicate } from './types'\n\nexport interface ContentNodeWithPos { pos: number; start: number; depth: number; node: ProseNode }\n\nexport const findParentNodeClosestToPos\n    = (predicate: Predicate) =>\n      ($pos: ResolvedPos): ContentNodeWithPos | undefined => {\n        for (let i = $pos.depth; i > 0; i--) {\n          const node = $pos.node(i)\n          if (predicate(node)) {\n            return {\n              pos: i > 0 ? $pos.before(i) : 0,\n              start: $pos.start(i),\n              depth: i,\n              node,\n            }\n          }\n        }\n\n        return undefined\n      }\n\nexport const findParentNode\n    = (predicate: Predicate) =>\n      (selection: Selection): ContentNodeWithPos | undefined => {\n        return findParentNodeClosestToPos(predicate)(selection.$from)\n      }\n\nexport const findSelectedNodeOfType = (selection: Selection, nodeType: NodeType): ContentNodeWithPos | undefined => {\n  if (!(selection instanceof NodeSelection))\n    return\n\n  const { node, $from } = selection\n  if (equalNodeType(nodeType, node))\n    return { node, pos: $from.pos, start: $from.start($from.depth), depth: $from.depth }\n\n  return undefined\n}\n"],"names":[],"mappings":"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"}