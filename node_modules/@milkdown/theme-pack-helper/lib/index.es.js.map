{"version":3,"file":"index.es.js","sources":["../src/prosemirror-view.ts","../src/renderer-preset/code-fence.ts","../src/renderer-preset/image.ts","../src/renderer-preset/inner-editor.ts","../src/renderer-preset/input-chip.ts","../src/renderer-preset/task-list-item.ts","../src/renderer-preset/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\nimport type { Emotion } from '@milkdown/core'\n\nexport const injectProsemirrorView = ({ injectGlobal }: Emotion) => injectGlobal`\n    /* copy from https://github.com/ProseMirror/@milkdown/prose/blob/master/style/prosemirror.css */\n    .ProseMirror {\n        position: relative;\n    }\n\n    .ProseMirror {\n        word-wrap: break-word;\n        white-space: pre-wrap;\n        white-space: break-spaces;\n        -webkit-font-variant-ligatures: none;\n        font-variant-ligatures: none;\n        font-feature-settings: 'liga' 0; /* the above doesn't seem to work in Edge */\n    }\n\n    .ProseMirror pre {\n        white-space: pre-wrap;\n    }\n\n    .ProseMirror li {\n        position: relative;\n    }\n\n    .ProseMirror-hideselection *::selection {\n        background: transparent;\n    }\n    .ProseMirror-hideselection *::-moz-selection {\n        background: transparent;\n    }\n    .ProseMirror-hideselection {\n        caret-color: transparent;\n    }\n\n    .ProseMirror-selectednode {\n        outline: 2px solid #8cf;\n    }\n\n    /* Make sure li selections wrap around markers */\n\n    li.ProseMirror-selectednode {\n        outline: none;\n    }\n\n    li.ProseMirror-selectednode:after {\n        content: '';\n        position: absolute;\n        left: -32px;\n        right: -2px;\n        top: -2px;\n        bottom: -2px;\n        border: 2px solid #8cf;\n        pointer-events: none;\n    }\n\n    /* Protect against generic img rules */\n\n    img.ProseMirror-separator {\n        display: inline !important;\n        border: none !important;\n        margin: 0 !important;\n    }\n`\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Emotion, ThemeCodeFenceType, ThemeManager } from '@milkdown/core'\nimport { ThemeBorder, ThemeFont, ThemeIcon, ThemeScrollbar, ThemeShadow, ThemeSize, getPalette } from '@milkdown/core'\nimport { missingRootElement } from '@milkdown/exception'\nimport type { Node } from '@milkdown/prose/model'\n\nconst getStyle = (manager: ThemeManager, { css }: Emotion) => {\n  const palette = getPalette(manager)\n  const radius = manager.get(ThemeSize, 'radius')\n  const lineWidth = manager.get(ThemeSize, 'lineWidth')\n\n  return css`\n        background-color: ${palette('background')};\n        color: ${palette('neutral')};\n        font-size: 14px;\n        padding: 18px 6px 22px;\n        border-radius: ${radius};\n        font-family: ${manager.get(ThemeFont, 'typography')};\n\n        .code-fence_selector-wrapper {\n            position: relative;\n        }\n\n        .code-fence_selector {\n            width: 180px;\n            box-sizing: border-box;\n            border-radius: ${radius};\n            margin: 0 18px 18px;\n            cursor: pointer;\n            background-color: ${palette('surface')};\n            position: relative;\n            display: flex;\n            color: ${palette('neutral', 0.87)};\n            letter-spacing: 0.5px;\n            height: 42px;\n            align-items: center;\n\n            ${manager.get(ThemeBorder, undefined)};\n            ${manager.get(ThemeShadow, undefined)};\n\n            & > .icon {\n                width: 42px;\n                height: 100%;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                color: ${palette('solid', 0.87)};\n                border-left: ${lineWidth} solid ${palette('line')};\n\n                text-align: center;\n                transition: all 0.2s ease-in-out;\n                &:hover {\n                    background: ${palette('background')};\n                    color: ${palette('primary')};\n                }\n            }\n\n            > span:first-child {\n                padding-left: 16px;\n                flex: 1;\n                font-weight: 500;\n            }\n        }\n\n        .code-fence_selector-list-item {\n            list-style: none;\n            line-height: 2;\n            padding-left: 16px;\n            cursor: pointer;\n            margin: 0 !important;\n            :hover {\n                background: ${palette('secondary', 0.12)};\n                color: ${palette('primary')};\n            }\n        }\n\n        .code-fence_selector-list {\n            &[data-fold='true'] {\n                display: none;\n            }\n\n            margin: 0 !important;\n            font-weight: 500;\n            position: absolute;\n            z-index: 1;\n            top: 42px;\n            box-sizing: border-box;\n            left: 18px;\n            padding: 8px 0;\n            max-height: 260px;\n            width: 180px;\n            background-color: ${palette('surface')};\n            border-top: none;\n            overflow-y: auto;\n            display: flex;\n            flex-direction: column;\n\n            ${manager.get(ThemeScrollbar, ['y'])}\n            ${manager.get(ThemeBorder, undefined)};\n            ${manager.get(ThemeShadow, undefined)};\n        }\n    `\n}\n\nexport const codeFence = (manager: ThemeManager, emotion: Emotion) => {\n  manager.set<ThemeCodeFenceType>(\n    'code-fence',\n    ({ view, editable, onSelectLanguage, onBlur, onFocus, languageList }) => {\n      const container = document.createElement('div')\n      const selectWrapper = document.createElement('div')\n      const select = document.createElement('ul')\n      const pre = document.createElement('pre')\n      const code = document.createElement('code')\n\n      const valueWrapper = document.createElement('div')\n      valueWrapper.className = 'code-fence_selector'\n\n      const value = document.createElement('span')\n      valueWrapper.appendChild(value)\n\n      const downIcon = manager.get(ThemeIcon, 'downArrow')\n      if (editable() && downIcon)\n        valueWrapper.appendChild(downIcon.dom)\n\n      code.spellcheck = false\n      selectWrapper.className = 'code-fence_selector-wrapper'\n      selectWrapper.contentEditable = 'false'\n      selectWrapper.append(valueWrapper)\n      selectWrapper.append(select)\n      pre.append(code)\n      const codeContent = document.createElement('div')\n      code.append(codeContent)\n      codeContent.style.whiteSpace = 'inherit'\n      container.append(selectWrapper, pre)\n\n      container.classList.add('code-fence')\n\n      manager.onFlush(() => {\n        const style = getStyle(manager, emotion)\n        if (style)\n          container.classList.add(style)\n      })\n\n      select.className = 'code-fence_selector-list'\n      select.addEventListener('mousedown', (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        if (!editable())\n          return\n\n        const el = e.target\n        if (!(el instanceof HTMLLIElement))\n          return\n        const value = el.dataset.value\n        if (value != null)\n          onSelectLanguage(value)\n      })\n      valueWrapper.addEventListener('mousedown', (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        if (!editable())\n          return\n        onFocus()\n      })\n\n      const onClickOutside = () => {\n        if (!editable() || select.dataset.fold === 'true')\n          return\n\n        onBlur()\n      }\n      document.addEventListener('mousedown', onClickOutside)\n\n      languageList.forEach((lang) => {\n        const option = document.createElement('li')\n        option.className = 'code-fence_selector-list-item'\n        option.innerText = lang || '--'\n        select.appendChild(option)\n        option.setAttribute('data-value', lang)\n      })\n\n      const onUpdate = (node: Node) => {\n        container.dataset.language = node.attrs.language\n        value.innerText = node.attrs.language || '--'\n        select.style.maxHeight = ''\n        select.setAttribute('data-fold', node.attrs.fold ? 'true' : 'false')\n\n        const $editor = view.dom.parentElement\n        if (!$editor)\n          throw missingRootElement()\n\n        const editorRect = $editor.getBoundingClientRect()\n        const selectWrapperRect = selectWrapper.getBoundingClientRect()\n        const selectRect = select.getBoundingClientRect()\n\n        let direction: 'top' | 'bottom'\n        let maxHeight: number | undefined\n        const selectWrapperToTop = selectWrapperRect.top - editorRect.top\n        const selectWrapperToBottom\n                    = editorRect.height + editorRect.top - (selectWrapperRect.height + selectWrapperRect.top)\n        if (selectWrapperToBottom >= selectRect.height + 14) {\n          direction = 'bottom'\n        }\n        else if (selectWrapperToTop >= selectRect.height + 14) {\n          direction = 'top'\n        }\n        else if (selectWrapperToBottom >= selectWrapperToTop) {\n          direction = 'bottom'\n          maxHeight = selectWrapperToBottom - 14\n        }\n        else {\n          direction = 'top'\n          maxHeight = selectWrapperToTop - 14\n        }\n\n        const top = direction === 'top' ? -(maxHeight ?? selectRect.height) : selectWrapperRect.height\n\n        select.style.maxHeight = maxHeight !== undefined && maxHeight > 0 ? `${maxHeight}px` : ''\n        select.style.top = `${top}px`\n      }\n\n      const onDestroy = () => {\n        container.remove()\n        document.removeEventListener('mousedown', onClickOutside)\n      }\n\n      return {\n        dom: container,\n        contentDOM: codeContent,\n        onUpdate,\n        onDestroy,\n      }\n    },\n  )\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Emotion, Icon, ThemeImageType, ThemeManager } from '@milkdown/core'\nimport { ThemeIcon, ThemeSize, getPalette } from '@milkdown/core'\nimport type { Node } from '@milkdown/prose/model'\n\nexport const image = (manager: ThemeManager, { css }: Emotion) => {\n  const palette = getPalette(manager)\n\n  manager.set<ThemeImageType>('image', ({ placeholder, isBlock, onError, onLoad }) => {\n    const createIcon = (icon: Icon) => manager.get(ThemeIcon, icon)?.dom as HTMLElement\n    const container = document.createElement('span')\n    container.classList.add('image-container')\n\n    manager.onFlush(() => {\n      const style = css`\n                display: inline-block;\n                position: relative;\n                text-align: center;\n                font-size: 0;\n                vertical-align: text-bottom;\n                line-height: 1;\n\n                ${isBlock\n                    ? `\n                width: 100%;\n                margin: 0 auto;\n                `\n                    : ''}\n\n                &.ProseMirror-selectednode::after {\n                    content: '';\n                    background: ${palette('secondary', 0.38)};\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n                    bottom: 0;\n                }\n\n                img {\n                    max-width: 100%;\n                    height: auto;\n                    object-fit: contain;\n                    margin: 0 2px;\n                }\n                .icon,\n                .placeholder {\n                    display: none;\n                }\n\n                &.system {\n                    width: 100%;\n                    padding: 0 32px;\n                    font-size: inherit;\n\n                    img {\n                        width: 0;\n                        height: 0;\n                        display: none;\n                    }\n\n                    .icon,\n                    .placeholder {\n                        display: inline;\n                    }\n\n                    box-sizing: border-box;\n                    height: 48px;\n                    background-color: ${palette('background')};\n                    border-radius: ${manager.get(ThemeSize, 'radius')};\n                    display: inline-flex;\n                    gap: 32px;\n                    justify-content: flex-start;\n                    align-items: center;\n                    .placeholder {\n                        margin: 0;\n                        line-height: 1;\n                        &::before {\n                            content: '';\n                            font-size: 14px;\n                            color: ${palette('neutral', 0.6)};\n                        }\n                    }\n                }\n\n                &.empty {\n                    .placeholder {\n                        &::before {\n                            content: '${placeholder}';\n                        }\n                    }\n                }\n            `\n\n      if (style)\n        container.classList.add(style)\n    })\n\n    const content = document.createElement('img')\n\n    container.append(content)\n    let icon = createIcon('image')\n    const $placeholder = document.createElement('span')\n    $placeholder.classList.add('placeholder')\n    container.append(icon, $placeholder)\n\n    const setIcon = (name: Icon) => {\n      const nextIcon = createIcon(name)\n      container.replaceChild(nextIcon, icon)\n      icon = nextIcon\n    }\n\n    const loadImage = (src: string) => {\n      container.classList.add('system', 'loading')\n      setIcon('loading')\n      const img = document.createElement('img')\n      img.src = src\n\n      img.onerror = () => {\n        onError?.(img)\n      }\n\n      img.onload = () => {\n        onLoad?.(img)\n      }\n    }\n\n    const onUpdate = (node: Node) => {\n      const { src, alt, title, loading, failed } = node.attrs\n      content.src = src\n      content.title = title || alt\n      content.alt = alt\n\n      if (src.length === 0) {\n        container.classList.add('system', 'empty')\n        setIcon('image')\n        return\n      }\n\n      if (loading) {\n        loadImage(src)\n        return\n      }\n\n      if (failed) {\n        container.classList.remove('loading', 'empty')\n        container.classList.add('system', 'failed')\n        setIcon('brokenImage')\n        return\n      }\n\n      if (src.length > 0) {\n        container.classList.remove('system', 'empty', 'loading')\n        return\n      }\n\n      container.classList.add('system', 'empty')\n      setIcon('image')\n    }\n\n    return {\n      dom: container,\n      onUpdate,\n    }\n  })\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Emotion, ThemeInnerEditorType, ThemeManager } from '@milkdown/core'\nimport { ThemeFont, ThemeSize, getPalette } from '@milkdown/core'\nimport { baseKeymap, chainCommands, deleteSelection } from '@milkdown/prose/commands'\nimport { history, redo, undo } from '@milkdown/prose/history'\nimport { keymap } from '@milkdown/prose/keymap'\nimport type { Node } from '@milkdown/prose/model'\nimport { EditorState, TextSelection } from '@milkdown/prose/state'\nimport { StepMap } from '@milkdown/prose/transform'\nimport { EditorView } from '@milkdown/prose/view'\n\nconst getStyle = (manager: ThemeManager, { css }: Emotion) => {\n  const palette = getPalette(manager)\n  const radius = manager.get(ThemeSize, 'radius')\n  const code = manager.get(ThemeFont, 'code')\n\n  const codeStyle = css`\n        color: ${palette('neutral', 0.87)};\n        background-color: ${palette('background')};\n        border-radius: ${radius};\n        padding: 16px 32px;\n        font-size: 14px;\n        font-family: ${code};\n        overflow: hidden;\n        line-height: 1.5;\n        .ProseMirror {\n            outline: none;\n        }\n    `\n\n  const hideCodeStyle = css`\n        display: none;\n    `\n\n  const previewPanelStyle = css`\n        display: flex;\n        justify-content: center;\n        padding: 16px 0;\n    `\n\n  return {\n    codeStyle,\n    hideCodeStyle,\n    previewPanelStyle,\n  }\n}\n\nconst createInnerEditor = (outerView: EditorView, getPos: () => number) => {\n  let isEditing = false\n  let innerView: EditorView | undefined\n\n  const openEditor = ($: HTMLElement, doc: Node) => {\n    innerView = new EditorView($, {\n      state: EditorState.create({\n        doc,\n        plugins: [\n          history(),\n          keymap({\n            ...baseKeymap,\n            'Backspace': chainCommands(deleteSelection, (state) => {\n              if (!state.selection.empty)\n                return false\n\n              if (innerView && innerView.state.doc.textContent.length > 0)\n                return false\n\n              const { dispatch, state: outerState } = outerView\n              const p = outerState.schema.nodes.paragraph?.create()\n              if (!p)\n                return false\n              const tr = outerState.tr.replaceSelectionWith(p)\n              let start = tr.selection.from - 2\n              if (start < 0)\n                start = 0\n\n              dispatch(tr.setSelection(TextSelection.create(tr.doc, start)))\n              outerView.focus()\n              return true\n            }),\n            'Mod-Enter': (_, dispatch) => {\n              if (dispatch) {\n                const { state } = outerView\n                const { to } = state.selection\n                const p = state.schema.nodes.paragraph?.createAndFill()\n                if (!p)\n                  return false\n                const tr = state.tr.replaceWith(to, to, p)\n                outerView.dispatch(tr.setSelection(TextSelection.create(tr.doc, to)))\n                outerView.focus()\n              }\n\n              return true\n            },\n          }),\n          keymap({\n            'Mod-z': undo,\n            'Mod-y': redo,\n            'Shift-Mod-z': redo,\n          }),\n        ],\n      }),\n      plugins: [],\n      dispatchTransaction: (tr) => {\n        if (!innerView)\n          return\n        const { state, transactions } = innerView.state.applyTransaction(tr)\n        innerView.updateState(state)\n\n        if (!tr.getMeta('fromOutside')) {\n          const outerTr = outerView.state.tr\n          const offsetMap = StepMap.offset(getPos() + 1)\n\n          transactions.forEach((transaction) => {\n            const { steps } = transaction\n            steps.forEach((step) => {\n              const mapped = step.map(offsetMap)\n\n              if (!mapped)\n                throw new Error('step discarded!')\n\n              outerTr.step(mapped)\n            })\n          })\n          if (outerTr.docChanged)\n            outerView.dispatch(outerTr)\n        }\n      },\n    })\n    innerView.focus()\n    const { state } = innerView\n    innerView.dispatch(state.tr.setSelection(TextSelection.create(state.doc, 0)))\n    isEditing = true\n  }\n\n  const closeEditor = () => {\n    if (innerView)\n      innerView.destroy()\n\n    innerView = undefined\n    isEditing = false\n  }\n\n  return {\n    isEditing: () => isEditing,\n    innerView: () => innerView,\n    openEditor,\n    closeEditor,\n  }\n}\n\nexport const innerEditor = (manager: ThemeManager, emotion: Emotion) => {\n  manager.set<ThemeInnerEditorType>('inner-editor', ({ view, getPos, render }) => {\n    const inner$ = createInnerEditor(view, getPos)\n    const dom = document.createElement('div')\n    dom.classList.add('math-block')\n    const editor = document.createElement('div')\n    const preview = document.createElement('div')\n\n    let codeStyle = ''\n    let hideCodeStyle = ''\n    let previewPanelStyle = ''\n\n    manager.onFlush(() => {\n      ({ codeStyle, hideCodeStyle, previewPanelStyle } = getStyle(manager, emotion))\n      if (codeStyle && hideCodeStyle)\n        editor.classList.add(codeStyle, hideCodeStyle)\n\n      if (previewPanelStyle)\n        preview.classList.add(previewPanelStyle)\n    })\n\n    dom.append(editor)\n\n    return {\n      dom,\n      preview,\n      editor,\n      onUpdate: (node, isInit) => {\n        if (isInit) {\n          const value = node.attrs.value || node.textContent || ''\n          editor.dataset.value = value\n          render(value)\n          return\n        }\n\n        const innerView = inner$.innerView()\n        if (innerView) {\n          const state = innerView.state\n          const start = node.content.findDiffStart(state.doc.content)\n          if (start != null) {\n            const diff = node.content.findDiffEnd(state.doc.content)\n            if (diff) {\n              let { a: endA, b: endB } = diff\n              const overlap = start - Math.min(endA, endB)\n              if (overlap > 0) {\n                endA += overlap\n                endB += overlap\n              }\n              innerView.dispatch(\n                state.tr.replace(start, endB, node.slice(start, endA)).setMeta('fromOutside', true),\n              )\n            }\n          }\n        }\n\n        const newVal = node.content.firstChild?.text || ''\n        editor.dataset.value = newVal\n\n        render(newVal)\n      },\n      onFocus: (node) => {\n        if (!view.editable)\n          return\n        if (hideCodeStyle)\n          editor.classList.remove(hideCodeStyle)\n\n        inner$.openEditor(editor, node)\n        dom.classList.add('ProseMirror-selectednode')\n      },\n      onBlur: () => {\n        if (hideCodeStyle)\n          editor.classList.add(hideCodeStyle)\n\n        inner$.closeEditor()\n        dom.classList.remove('ProseMirror-selectednode')\n      },\n      onDestroy: () => {\n        preview.remove()\n        editor.remove()\n        dom.remove()\n      },\n      stopEvent: (event) => {\n        const innerView = inner$.innerView()\n        const { target } = event\n        const isChild = target && innerView?.dom.contains(target as Element)\n        return !!(innerView && isChild)\n      },\n    }\n  })\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type {\n  Emotion,\n  ThemeInputChipType,\n  ThemeManager,\n} from '@milkdown/core'\nimport {\n  ThemeBorder,\n  ThemeShadow,\n  ThemeSize,\n  getPalette,\n} from '@milkdown/core'\nimport { missingRootElement } from '@milkdown/exception'\nimport { calculateTextPosition } from '@milkdown/prose'\nimport type { EditorView } from '@milkdown/prose/view'\n\nconst getStyle = (manager: ThemeManager, { css }: Emotion, options: { width: string }) => {\n  const palette = getPalette(manager)\n  return css`\n        ${manager.get(ThemeBorder, undefined)}\n        ${manager.get(ThemeShadow, undefined)}\n\n        display: inline-flex;\n        justify-content: space-between;\n        align-items: center;\n        position: absolute;\n        background: ${palette('surface')};\n        border-radius: ${manager.get(ThemeSize, 'radius')};\n        font-size: 16px;\n\n        height: 56px;\n        box-sizing: border-box;\n        width: ${options.width};\n        padding: 0 16px;\n        gap: 16px;\n        z-index: 2;\n\n        input,\n        button {\n            all: unset;\n        }\n\n        input {\n            flex-grow: 1;\n            caret-color: ${palette('primary')};\n            &::placeholder {\n                color: ${palette('neutral', 0.6)};\n            }\n        }\n\n        button {\n            cursor: pointer;\n            height: 36px;\n            color: ${palette('primary')};\n            font-size: 14px;\n            padding: 0 8px;\n            font-weight: 500;\n            letter-spacing: 1.25px;\n            &:hover {\n                background-color: ${palette('secondary', 0.12)};\n            }\n            &.disable {\n                color: ${palette('neutral', 0.38)};\n                cursor: not-allowed;\n                &:hover {\n                    background: transparent;\n                }\n            }\n            &.hide {\n                display: none;\n            }\n        }\n\n        &.hide {\n            display: none;\n        }\n    `\n}\n\nconst calcInputPos = (view: EditorView, input: HTMLDivElement) => {\n  calculateTextPosition(view, input, (start, end, target, parent) => {\n    const $editor = view.dom.parentElement\n    if (!$editor)\n      throw missingRootElement()\n\n    const selectionWidth = end.left - start.left\n    let left = start.left - parent.left - (target.width - selectionWidth) / 2\n    const top = start.bottom - parent.top + 14 + $editor.scrollTop\n\n    if (left < 0)\n      left = 0\n\n    const maxLeft = $editor.clientWidth - (target.width + 4)\n    if (left > maxLeft)\n      left = maxLeft\n\n    return [top, left]\n  })\n}\n\nexport const inputChip = (manager: ThemeManager, emotion: Emotion) => {\n  manager.set<ThemeInputChipType>(\n    'input-chip',\n    ({ isBindMode, onUpdate, buttonText, placeholder, width = '400px', calculatePosition = calcInputPos }) => {\n      let button: HTMLButtonElement | null = null\n      let disabled = false\n      let value = ''\n      const wrapper = document.createElement('div')\n\n      manager.onFlush(() => {\n        const style = getStyle(manager, emotion, { width })\n\n        if (style)\n          wrapper.classList.add(style)\n      })\n\n      wrapper.classList.add('tooltip-input')\n\n      const input = document.createElement('input')\n      if (placeholder)\n        input.placeholder = placeholder\n\n      wrapper.appendChild(input)\n\n      if (!isBindMode) {\n        button = document.createElement('button')\n        button.innerText = buttonText || 'APPLY'\n        wrapper.appendChild(button)\n      }\n      const hide = () => {\n        wrapper.classList.add('hide')\n      }\n      const show = (editorView: EditorView) => {\n        wrapper.classList.remove('hide')\n        calculatePosition(editorView, wrapper)\n      }\n\n      const onInput = (e: Event) => {\n        const { target } = e\n        if (!(target instanceof HTMLInputElement))\n          return\n\n        value = target.value\n\n        if (!button) {\n          onUpdate(value)\n          return\n        }\n\n        if (!value) {\n          button.classList.add('disable')\n          disabled = true\n          return\n        }\n\n        button.classList.remove('disable')\n        disabled = false\n      }\n\n      const onClick = (e: MouseEvent) => {\n        if (disabled)\n          return\n        e.stopPropagation()\n        onUpdate(value)\n        hide()\n      }\n\n      const onKeydown = (e: KeyboardEvent) => {\n        if ('key' in e && e.key === 'Enter') {\n          onUpdate(value)\n          hide()\n        }\n      }\n\n      const destroy = () => {\n        input.removeEventListener('input', onInput)\n        input.removeEventListener('keydown', onKeydown)\n        button?.removeEventListener('mousedown', onClick)\n        wrapper.remove()\n      }\n\n      const init = (editorView: EditorView) => {\n        const $editor = editorView.dom.parentElement\n        if (!$editor)\n          throw missingRootElement()\n\n        input.addEventListener('input', onInput)\n        input.addEventListener('keydown', onKeydown)\n        button?.addEventListener('mousedown', onClick)\n\n        $editor.appendChild(wrapper)\n        hide()\n      }\n\n      const update = (v: string) => {\n        value = v\n        input.value = v\n      }\n\n      return {\n        dom: wrapper,\n        init,\n        show,\n        hide,\n        destroy,\n        update,\n      }\n    },\n  )\n}\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport type { Emotion, Icon, ThemeManager, ThemeTaskListItemType } from '@milkdown/core'\nimport { ThemeIcon, getPalette } from '@milkdown/core'\n\nexport const taskListItem = (manager: ThemeManager, { css }: Emotion) => {\n  const palette = getPalette(manager)\n\n  manager.set<ThemeTaskListItemType>('task-list-item', ({ onChange, editable }) => {\n    const createIcon = (icon: Icon) => manager.get(ThemeIcon, icon)?.dom as HTMLElement\n\n    const listItem = document.createElement('li')\n    const checkboxWrapper = document.createElement('label')\n    const checkboxStyler = document.createElement('span')\n    const checkbox = document.createElement('input')\n    const content = document.createElement('div')\n\n    let icon = createIcon('unchecked')\n    checkboxWrapper.appendChild(icon)\n    const setIcon = (name: Icon) => {\n      const nextIcon = createIcon(name)\n      checkboxWrapper.replaceChild(nextIcon, icon)\n      icon = nextIcon\n    }\n\n    checkboxWrapper.append(checkbox, checkboxStyler)\n    listItem.append(checkboxWrapper, content)\n\n    checkboxWrapper.contentEditable = 'false'\n    checkbox.type = 'checkbox'\n    if (!editable()) {\n      checkbox.disabled = true\n      checkboxWrapper.style.cursor = 'not-allowed'\n    }\n    checkbox.onchange = (event) => {\n      const target = event.target\n      if (!(target instanceof HTMLInputElement))\n        return\n\n      if (!editable()) {\n        checkbox.checked = !checkbox.checked\n\n        return\n      }\n\n      event.preventDefault()\n\n      onChange(checkbox.checked)\n    }\n    listItem.dataset.type = 'task-item'\n    listItem.classList.add('task-list-item')\n\n    manager.onFlush(() => {\n      const style = css`\n                list-style-type: none;\n                position: relative;\n\n                & > div {\n                    overflow: hidden;\n                    padding: 0 2px;\n                    width: 100%;\n                }\n\n                label {\n                    display: inline-block;\n                    width: 24px;\n                    height: 24px;\n                    cursor: pointer;\n                    input {\n                        visibility: hidden;\n                    }\n                }\n                &[data-checked='true'] {\n                    > label {\n                        color: ${palette('primary')};\n                    }\n                }\n                &[data-checked='false'] {\n                    > label {\n                        color: ${palette('solid', 0.87)};\n                    }\n                }\n                .paragraph {\n                    margin: 8px 0;\n                }\n            `\n\n      if (style)\n        listItem.classList.add(style)\n    })\n\n    return {\n      dom: listItem,\n      contentDOM: content,\n      onUpdate: (node) => {\n        listItem.dataset.checked = node.attrs.checked\n        if (node.attrs.checked)\n          checkbox.setAttribute('checked', 'checked')\n        else\n          checkbox.removeAttribute('checked')\n\n        setIcon(node.attrs.checked ? 'checked' : 'unchecked')\n      },\n    }\n  })\n}\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport type { Emotion, ThemeManager } from '@milkdown/core'\n\nimport { codeFence } from './code-fence'\nimport { image } from './image'\nimport { innerEditor } from './inner-editor'\nimport { inputChip } from './input-chip'\nimport { taskListItem } from './task-list-item'\n\nexport * from './code-fence'\nexport * from './image'\nexport * from './inner-editor'\nexport * from './input-chip'\nexport * from './task-list-item'\n\nexport const useAllPresetRenderer = (manager: ThemeManager, emotion: Emotion) => {\n  [inputChip, image, codeFence, taskListItem, innerEditor].forEach((f) => {\n    f(manager, emotion)\n  })\n}\n"],"names":["injectProsemirrorView","injectGlobal","getStyle","manager","css","palette","getPalette","radius","ThemeSize","lineWidth","ThemeFont","ThemeBorder","ThemeShadow","ThemeScrollbar","codeFence","emotion","view","editable","onSelectLanguage","onBlur","onFocus","languageList","container","selectWrapper","select","pre","code","valueWrapper","value","downIcon","ThemeIcon","codeContent","style","e","el","onClickOutside","lang","option","node","$editor","missingRootElement","editorRect","selectWrapperRect","selectRect","direction","maxHeight","selectWrapperToTop","selectWrapperToBottom","top","image","placeholder","isBlock","onError","onLoad","createIcon","icon","_a","content","$placeholder","setIcon","name","nextIcon","loadImage","src","img","alt","title","loading","failed","codeStyle","hideCodeStyle","previewPanelStyle","createInnerEditor","outerView","getPos","isEditing","innerView","$","doc","EditorView","EditorState","history","keymap","baseKeymap","chainCommands","deleteSelection","state","dispatch","outerState","p","tr","start","TextSelection","_","to","undo","redo","transactions","outerTr","offsetMap","StepMap","transaction","steps","step","mapped","innerEditor","render","inner$","dom","editor","preview","isInit","diff","endA","endB","overlap","newVal","event","target","isChild","options","calcInputPos","input","calculateTextPosition","end","parent","selectionWidth","left","maxLeft","inputChip","isBindMode","onUpdate","buttonText","width","calculatePosition","button","disabled","wrapper","hide","show","editorView","onInput","onClick","onKeydown","v","taskListItem","onChange","listItem","checkboxWrapper","checkboxStyler","checkbox","useAllPresetRenderer","f"],"mappings":"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"}